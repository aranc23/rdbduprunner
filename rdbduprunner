#! /usr/bin/perl
# Copyright 2020 Aran Cox <arancox@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

use strict;
use warnings;
use v5.16;
# this should cause dd to die when sent kill, ctrl-c etc.
use sigtrap qw(die normal-signals);

use Backup::rdbduprunner qw($APP_NAME);

$APP_NAME='rdbduprunner';

Backup::rdbduprunner::rdbduprunner();

=head1 NAME

rdbduprunner - perl magic wrapper for rsync, rdiff-backup, and duplicity

=head1 SYNOPSIS

B<rdbduprunner> {B<-h|--help>}

B<rdbduprunner> {B<--calculate-average|--check|--cleanup|--compare|--verify|--dump|--list|--list-oldest|--orphans|--remove-oldest|--status|--tidy|--status-json|--status-delete=I<backup>>} {B<-t|--terminal-verbosity> I<integer>} {B<-v|--verbose>} {B<--progress>} {B<--full>} {B<--force>} {B<--allow-source-mismatch>} {B<-n|--dry-run>} {B<--dest> I<regex>} {B<--host> I<regex>} {B<--path> I<regex>}

=head1 DESCRIPTION

rdbduprunner is a wrapper for rsync, rdiff-backup, and duplicity
backups.  rdbduprunner will look for configuration files in a short
list of standard locations as detailed under FILES.  These files are
parsed by Config::General which supports an Apache-like config file.

General usage involves running rdbduprunner with no options which will
only print out warnings and the commands that would be invoked if you
were to run it with the --notest option. Then run it again with the
--notest option to actually perform the backups

Other common options involve filtering which backups to run, adjusting
the verbosity of the output, adjusting logging, and so on.


=head1 OPTIONS

=head2 MAJOR MODES

rdbduprunner's primary mode is "backup" and the following override
that; only one of the following is allowed for any invocation of
rdbduprunner.  Many only apply to one or both of rdiff-backup or
duplicity since they act on archives of their own creation.  For rsync
backups tools like ls and du perform similar functions.

=over 4

=item {B<--status-json>}

Prints the status DBM as a json hash for parsing by other tools.

=item {B<--status-delete>=I<backup_src>}

Deletes the specified keys from the status DBM thus making
rdbduprunner "forget" about them.  Does not change in any way what
rdbduprunner will back up in the future, only alters the status
database used by monitoring tools (cmk).

IE: rdbduprunner --status-delete /local/ --status-delete /home/

Can be specified multiple times.


=item {B<--calculate-average>} (rdiff-backup only)

Parses run files from rdiff-backup to calculate average increment
size.  If you do not limit which backups this option applies to using
--dest, --host, or --path options you will get the average increment
size of all backups that rdbduprunner is configured to run with
rdiff-backup.


=item {B<--check>|B<--cleanup>} (rdiff-backup/duplicity only)

Both options are identical.  duplicty backups will have the cleanup
option run on the destination directory.  For rdiff-backup the
--check-destination-dir option will be run against the directory.

=item {B<--compare>|B<--verify>} (rdiff-backup/duplicity only)

Passes the compare option to duplicty and the --verify option to
rdiff-backup which both have the purpose of printing what has changed
since the last backup, in other words what would be backed up on the
next run.

=item {B<--dump>}

Simply dumps the internal data structures for backups and
configuration options and exits.  Meant purely for debugging.

=item {B<--list>} (duplicity only)

Passes the list-current-files option to duplicity, since duplicity
stores everything inside a tar file.

=item {B<--list-oldest>} (rdiff-backup only)

Lists all increments from all rdiff-backup type backups in the order
of their age.

=item {B<--orphans>} (rdiff-backup only)

Find orphaned rdiff-backup temporary files inside backup destinations
and print those file names to stdout (for deletion, likely.)

=item {B<--remove-oldest>} (rdiff-backup only)

Removes the oldest known backup from all known rdiff-backup type
backups.  Should remove only one backup regardless of other settings.
Meant primarily for testing?  Ignores all other settings for cleaning
up rdiff-backup style backups. This option honors the --test/--notest
flags and will only print how rdiff-backup would be run if --notest
isn't specified as well.

=item {B<--status>}

Works on all backup types.  On rsync invokes du, on duplicity uses the
collection-status option and on rdiff-backup uses the
--list-increment-sizes option.  This option requires --notest to
execute, primarily because of the time it takes to run the operations.

=item {B<--tidy>} (rdiff-backup/duplicity only)

Attempts to apply the settings for a backup regarding the maximum
number of increments or maximum age of an increment to all or
specified backups.

=back

=head2 COMMAND LINE ONLY OPTIONS

Some options do not have equivalent configuration file parameters,
those are documented below.  Many parameters can be configured via
command line and config file and those are documented in the following
sections.

=over 4

=item {B<--test>|B<--notest>}

The default invocation assumes --test which causes rdbduprunner to
print which commands it would run without running them.  Passing
--notest will cause rdbduprunner to run the backup commands.

=item {B<--dest> I<regex>}

This option causes the backups to be run to be filtered based on the
name of the BackupDestination.

=item {B<--host> I<regex>}

This option causes the backups to be run to be filtered based on the
Host.

=item {B<--path> I<regex>}

This option causes the backups to be run to be filtered based on the
path on the host to be backed up.

=item {B<-t|--terminal-verbosity> I<integer>} (rdiff-backup only)

Increases logging verbosity to the terminal with rdiff-backup.

=item {B<-v|--verbose>} (rsync only)

Passes -v to rsync invocations.

=item {B<--progress>} (rsync only)

Passes --progress to rsync invocations.

=item {B<--full>} (duplicity only)

Passess the full option to duplicity backup.

=item {B<--force>} (duplicity only)

Passess the --force option to duplicity cleanup mode.

=item {B<--config> I<path>}

Change path to configuration file.

=item {B<--allow-source-mismatch>} (duplicity only)

Passes the identical option to duplicity.  No affect on other backup
types.

=item {B<-n|--dry-run>} (rsync and duplicity only)

Passes the --dry-run option to rsync or duplicity.  rdbduprunner will
not run the prerun, postrun or zfs create and zfs snapshot commands
(when applicable.)  rdiff-backup does not have a dry-run option.


=back

=head2 CONFIGURATION FILE PARAMETERS

Configuration files for rdbduprunner have 3 sections: global options,
backupsets and backupdestinations.  Many configuration parameters are
valid at the top level and inside backups and backupdestination
defintions.

For an overview of the configuration file format see the L</FILES> section.

=over 4

=item C<Stats> I<yes|no|on|off|0|1|true|false> {B<--stats|--no-stats>}

All backup binaries supported by rdbduprunner have the option to
produce some kind of statistics after a run.  Setting this to false
will turn those options off.

Default: true

=item C<Verbosity> I<Integer> {B<--verbosity> I<integer>} (rdiff-backup and duplicity)

Increases logging verbosity to the rdiff-backup log file and adjusts
the logging verbosity to the terminal for duplicity.

Validity: CLI, Global, BackupDestination, BackupSet

=item C<WholeFile> I<yes|no|on|off|0|1|true|false> {B<--whole-file|--wholefile|--no-whole-file|--no-wholefile>} (rsync only)

When true, pass --whole-file to rsync.
When false, pass --no-whole-file to rsync.

Default: false

Validity: CLI, Global, BackupDestination, BackupSet

=item C<Facility> I<auth|authpriv|cron|daemon|kern|local[0-7]|mail|news|syslog|user|uucp> {B<--facility> I<user|daemon|...>}

Changes the facility as passed to L<Log::Dispatch::Syslog>

Default: user

Validity: CLI, Global

=item C<Level> I<debug|info|notice|warning|error|critical|alert|emergency> {B<--level> I<debug|info|...>}

Syslog minimum severity level which is passed to the logging
dispatcher. Log messages of the specified severity or greater will be
logged to syslog, stdout, and the rdbduprunner log file.

Default: info

Validity: CLI, Global

=item C<GPGPassPhrase> I<string> (duplicity only)

Used to set PASSPHRASE environment variable which is used by duplicity.

Validity: Global BackupDestination

=item C<AWSAccessKeyID> I<string> (duplicity only)

Used to set AWS_ACCESS_KEY_ID environment variable which is used by duplicity.

Validity: Global BackupDestination

=item C<AWSSecretAccessKey> I<string> (duplicity only)

Used to set AWS_SECRET_ACCESS_KEY environment variable which is used by duplicity.

Validity: Global BackupDestination

=item C<SignKey> I<keyid> (duplicity only)

Passed to duplicity using the --sign-key command line option.

Validity: Global BackupDestination

=item C<EncryptKey> I<keyid> (duplicity only)

Passed to duplicity using the --encrypt-key command line option.

Validity: Global BackupDestination

=item C<Trickle> I<integer> {B<--trickle> I<integer>}

For rsync backups this value is passed to the --bwlimit option.

For other backup types, the backup software is invoked with
C</usr/bin/trickle -s -u X>, which should serve to limit the usable
bandwidth.

Validity: CLI, Global, BackupDestination, BackupSet

=item C<ZfsCreate> I<yes|no|on|off|0|1|true|false>

Create a zfs for the path, if the directory doesn't already exist.

Validity: Global BackupDestination

=item C<ZfsSnapshot> I<yes|no|on|off|0|1|true|false>

Create a zfs snapshot of the destination path, if possible.

=item C<Inplace> I<yes|no|on|off|0|1|true|false> {B<--inplace|--no-inplace|--noinplace>

Passes the --inplace and --partial options to rsync (instead of
--sparse) for this destination.  Assumed to be true every day of the
week except Sunday unless explicitly set.  If you always want
--inplace, set this to true, if you always want --sparse set this to
false.

=item C<Checksum> I<yes|no|on|off|0|1|true|false> {B<-c|--checksum|--no-checksum>} (rsync only)

Passes the --checksum (-c) option to rsync.

Validity: CLI, Global, BackupDestination, BackupSet

=item C<SSHCompress> I<yes|no|on|off|0|1|true|false> {B<--sshcompress|--no-sshcompress>} (rdiff-backup only)

Passes --ssh-no-compression if set to a false value.

This also mistakenly I believe passes -z to rsync to disable compression.

Validity: CLI, Global, BackupDestination, BackupSet

=item C<DuplicityBinary> I<executable> {B<--duplicity-binary> I<executable>}

Default: duplicity

Validity: CLI, Global, BackupDestination, BackupSet

=item C<RsyncBinary> I<executable> {B<--rsync-binary> I<executable>}

Default: rsync

Validity: CLI, Global, BackupDestination, BackupSet

=item C<RdiffBackupBinary> I<executable> {B<--rdiff-backup-binary> I<executable>}

Default: rdiff-backup

Validity: CLI, Global, BackupDestination, BackupSet

=item C<ZfsBinary> I<executable> {B<--zfs-binary> I<executable>}

Default: zfs

Validity: CLI, Global, BackupDestination, BackupSet

=item C<TrickleBinary> I<executable> {B<--trickle-binary> I<executable>}

Default: trickle

Validity: CLI, Global, BackupDestination, BackupSet

=item C<MaxWait> I<integer> {B<--maxwait> I<integer>}

Maximum number of seconds to wait for a lock on any given per-host
lock file or the global per-process lock file.

Default: 86400

Validity: CLI, Global

=item C<DefaultBackupDestination> I<backupdestinationname>

Specify the name of the backupdestination to use if one isn't
specified in the BackupSet.  Can only be specified in the config file
at the type level.

Validity: Global

=item C<MaxInc> I<integer> {B<--maxinc> I<integer>} (rdiff-backup only)

Used by the --tidy option to remove all but the most recent X
increments.

Validity: CLI, Global, BackupDestination, BackupSet

=item C<MaxAge> I<timespec> {B<--maxage> I<timespec>} (rdiff-backup/duplicity only)

Used by the --tidy option to remove all increments older than
specified age.  Ultimately this is passed to the remove-older-than
options of rdiff-backup or duplicity so see those manpages for
details.

Validity: CLI, Global, BackupDestination, BackupSet

Example: MaxAge 1Y2W4D7s

=item C<SkipFSType> I<fstype> {B<--skipfstype> I<fstype>}

Only applies during inventory, skips every filesystem with the types specified.
Currently there is a default list and you can only add to it, not reset it.

--skipfs reiserfs

Validity: CLI, Global, BackupDestination, BackupSet

Default list:

=over 2

autofs
binfmt_misc
bpf
cgroup
cgroup2
cifs
configfs
debugfs
devpts
devtmpfs
efivarfs
exfat
fuse
fuse.encfs
fuse.glusterfs
fuse.gvfs-fuse-daemon
fuse.gvfsd-fuse
fuse.lxcfs
fuse.portal
fuse.sshfs
fuse.vmware-vmblock
fuse.xrdp-chansrv
fuseblk
fusectl
htfs
hugetlbfs
ipathfs
iso9660
mqueue
nfs
nfs4
nfsd
nsfs
ntfs
proc
pstore
rootfs
rpc_pipefs
securityfs
selinuxfs
squashfs
sysfs
tmpfs
tracefs
usbfs
vfat
zfs

=back

=item C<AllowFS> I<fstype> {B<--allowfs> I<fstype>}

Allows this filesystem type to be included during inventory.  When
AllowFS is used, the skipfstype list is disregarded.  Only filesystem
types specified this way will be included during inventory if any are
specified at all. Because the default is for this parameter to be an
empty list, the SkipFSType list will be used to exclude.

Example: --allowfs reiserfs --allowfs ext4

Validity: CLI, Global, BackupDestination, BackupSet

=item C<Skip> I<path> {B<--skip> I<path>}

If a path added via the inventory process matches exactly the string
or strings specified by a Skip option, rdbduprunner will not back up that
filesystem/mountpoint. The following configuration fragment will cause
rdbduprunner to backup all filesystems except /tmp F<if> and only if /tmp
is a seperate filesystem.  It does not work as an exclude directive
above, it only matches filesystem mount points:

 Inventory true
 Skip /tmp

Validity: CLI, Global, BackupDestination, BackupSet

=item C<SkipRE> I<path> {B<--skipre> I<path>}

If a path added via the inventory process matches the string specified
by a SkipRE option when treated as a regular expression, rdbduprunner
will not not back up that filesystem/mountpoint. The following
configuration fragment will cause rdbduprunner to back up all
filesystems except filesystems mounted under /mnt, but only if they
are a seperate unique filesystem added via inventory:

 Inventory true
 SkipRE /mnt/.+

If there is a directory, in this example, like /mnt/test it will still
be backed up unless it it's own mountpoint.  It does not work as an
exclude directive as documented above above, it only matches
filesystem mount points

Validity: CLI, Global, BackupDestination, BackupSet

=item C<LocalHost> I<hostname> {B<--localhost> I<hostname>}

rdbduprunner sets this to the shortname of the system.  This is then
used when setting the C<host> parameter for BackupSets that don't
specify one.  The host value is then used in generating the output
path of the backup programs.  This means that purely local backups
will have names like C<server1-home> and remote systems if you specify
the FQDN will have output directories named like:
C<server1.example.com-home>.

This should probably be the output of the hostname() sub from
L<Sys::Hostname> by default, however changing it now would change the
names of some backups, at least potentially.

See L<https://github.com/aranc23/rdbduprunner/issues/12>

Advice: don't change this.

Validity: CLI, Global

=item C<UseAgent> I<yes|no|on|off|0|1|true|false> {B<--use-agent|--useagent>} (duplicity only)

Passes the --use-agent option to duplicity.

Validity: CLI, Global, BackupDestination, BackupSet

=item C<ExcludePath> I<path> {B<--exclude-path> I<path>}

rdbduprunner will look in this directory for a sub-directory named
rdb-excludes or excludes and match the backup tags with files.  rsync
and rdiff-backup/duplicity have different syntax for their exclude
files which is why they are seperated.  See the man pages for details.
This is a poorly thoughtout and confusing feature so maybe don't use
it.

Default: /etc/rdbduprunner.

Validity: CLI, Global

=item {B<--maxprocs> I<integer>} {C<maxprocs> = I<integer>}

Maximum number of simultaneous backups to perform.  rdbduprunner will
never do more than one backup from any given host at a time but if
there are multiple hosts multiple backups should occur at once.

Default: 1

Validity: CLI, Global

=item {B<--tempdir> I<path>}

Pass the --tempdir or --temp-dir options to underlying binaries in the
same manner as if the TempDir global config option had been specified.

=back

=head1 RETURN VALUE

=head1 ERRORS

=head1 DIAGNOSTICS

=head1 EXAMPLES

=head1 ENVIRONMENT

=head1 FILES

=head2 F<$HOME/.local/state/rdbduprunner.pid> F</var/run/rdbduprunner.pid>

Default PID/lock file.

=head2 F<$HOME/.config/rdbduprunner/config> F</etc/rdbduprunner/rdbduprunner.conf>

rdbduprunner's config file is an Apache style config file parsed by
the Config::General perl module. It consists of global options,
options enclosed in a BackupDestination config section and options
enclosed in a BackupSet section.  The options names are case
insensitive. Options are generally honored in this order:

The precendence is as follows:

=over 2

=item Command Line Options

=item BackupSet

=item BackupDestination

=item Global Options

=item Defaults

=back


=over 4

=item Command line options

=item BackupSet options

=item BackupDestination options

=item Global options

=back

=head3 Global Options

=over 4


=item I<TempDir> - Passed to some binaries as an alternate temp dir
path. Defaults to not pass any temp options therefore probably uses
/tmp.



=back

=head3 BackupDestination Options

Items enclosed in a <BackupDestination X> configuration block. The
name of the block is referenced by the I<DefaultBackupDestination> global
option and the I<BackupDestination> config option inside BackupSet
blocks.

=over 4

=item I<PercentUsed> - Integer, optional

Keep disk usage on destination below this percent:
When using rdiff-backup and duplicty type backups rdbduprunner will
attempt to delete older increments in order to keep usage below this
percentage.  It will do so before running backups and will not run
backups if it cannot reduce usage below this level.

=item I<MinFree> - Integer, optional

Keep disk usage below this number: When using rdiff-backup and
duplicty type backups rdbduprunner will attempt to delete older
increments in order to keep this much space free as specified in 512
byte blocks (because I could reliably get df to report this value.) It
will do so before running backups and will not run backups if it
cannot free this much space.


=back

=head3 BackupSet Options

Items enclosed in a <BackupSet X> configuration block. The name of the
block is not referenced anywhere but should be unique or collisions
will occur.

=over 4

=item I<BackupDestination> - String, optional

Must match existing BackupDestination as defined above.  When not
specified the default will be used as specified in global options as
DefaultBackupDestination.  These backups will be written to the the
destination specified using the backup type and other options
specified for that backup destination.

=item I<Path> - String, mandatory (multiples ok)

Directory to be backed up. This may be specified multiple times per
backupset, and doing so will create multiple backups one for each path
specified.

=item I<Host> - String, optional

Host to be backed up; if not specified assumes localhost

=item I<Inventory> - Boolean (if present at all, assumed to be true!)

Look at the remote machine for a list of directories to back up:
Excludes a long list of non-filesystem type filesystems (fuse, etc.)
Creates a new backup from each one not excluded.

=item I<Tag> - String, optional

Overrides the generated tag used to construct the output directory path.

=item I<Exclude> - String, optional (multiples ok)

Pass these paths to the --exclude or similar options of the underlying
invocation of rdiff-backup, duplicity, or rsync.  Does not attempt to
normalize the paths for any given method of specifiying exclusions.



=back

=head1 CAVEATS

=head1 BUGS

=head1 RESTRICTIONS

=head1 NOTES

rdbduprunner *should* prefer to use configuration items in this order,
with later entries superseding the prior level. This assumes that the
option itself is applicable all the way down to the individual
invocations of the backup software.

=over 4

=item Global Configuration

=item BackupDestination

=item BackupSet

=item Command Line Options

=back

=head1 AUTHOR

Aran Cox <arancox@gmail.com>

=head1 HISTORY

=head1 SEE ALSO

=over 4

L<rdiff-backup(1)>, L<duplicity(1)>, L<rsync(1)>, L<trickle(1)>, L<ssh(1)>, L<unison(1)>.

=back
