#! /usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use POSIX qw( strftime mktime );
use Data::Dumper;
use YAML;

my $CONFIG='/etc/btrfssnap.conf';
my $DESTROY=1;
my $SNAP=1;

GetOptions(
           'snap!'    => \$SNAP,
           'destroy!' => \$DESTROY,
           'config=s' => \$CONFIG,
          );

open(C,$CONFIG) or die "unable to open $CONFIG";
my ($config) = Load(join("",<C>)) or die "unable to load configuration from $CONFIG";
close(C);
print Dumper $config;

my %btrfs=%{$$config{btrfs}};
my $BTRFSROOT=$$config{root};

my $time=strftime('%F%T',localtime(time()));
$time =~ s/[\:\-]//g;


my @subvols=map { my @a=split(/\s+/,$_); $a[6]; } (`btrfs sub list $BTRFSROOT`);
chomp @subvols;

while(my ($btrfs,$days)=each(%btrfs)) {
  if($DESTROY) {
    foreach my $subvol (sort(@subvols)) {
      unless($subvol =~ /^snapshots\/\E$btrfs\/(\d+)$/) {
        next;
      }
      my $snap=$1;
      unless($snap =~ /(\d\d\d\d)(\d\d)(\d\d)(\d\d)(\d\d)(\d\d)/) {
        warn "unable to parse the snap date: $snap";
        next;
      }
      my $age=mktime($6,$5,$4,$3,($2-1),($1-1900));
      if(time() > ($age + ($days * 24 * 60 * 60 ))) {
        #printf("removing: %s created at %s\n",$snap,strftime('%F %T',localtime($age)));
        my @com=qw( btrfs subvolume delete );
        push(@com,join('/',$BTRFSROOT,$subvol));
        print join(" ",@com)."\n";
        system(@com);
        if($? != 0) {
          warn "unable to delete subvolume";
        }
      }
    }
  }
  if($SNAP) {
    my @com=qw( btrfs subvolume snapshot -r );
    push(@com,join('/',$BTRFSROOT,$btrfs));
    push(@com,join('/',$BTRFSROOT,'snapshots',$btrfs,$time));
    print join(' ',@com)."\n";
    system(@com);
    if($? != 0) {
      warn "unable to create snapshot";
    }
  }
}

