#! /usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use POSIX qw( strftime mktime );
use Data::Dumper;

# inifinite snapshots for some filesystems

our %months=(Jan => 0,
             Feb => 1,
             Mar => 2,
             Apr => 3,
             May => 4,
             Jun => 5,
             Jul => 6,
             Aug => 7,
             Sep => 8,
             Oct => 9,
             Nov => 10,
             Dec => 11,
            );

our $BTRFSROOT='/blob';
our $DESTROY=1;
our $SNAP=1;

our %btrfs=(
             'music'           => 365,
         );

GetOptions(
           'btrfs=s'  => \$BTRFSROOT,
           'snap!'    => \$SNAP,
           'destroy!' => \$DESTROY,
          );

my $time=strftime('%F%T',localtime(time()));
$time =~ s/[\:\-]//g;


my @subvols=map { my @a=split(/\s+/,$_); $a[6]; } (`btrfs sub list $BTRFSROOT`);
chomp @subvols;

while(my ($btrfs,$days)=each(%btrfs)) {
  if($DESTROY) {
    foreach my $subvol (sort(@subvols)) {
      unless($subvol =~ /^snapshots\/\E$btrfs\/(\d+)$/) {
        next;
      }
      my $snap=$1;
      unless($snap =~ /(\d\d\d\d)(\d\d)(\d\d)(\d\d)(\d\d)(\d\d)/) {
        warn "unable to parse the snap date: $snap";
        next;
      }
      my $age=mktime($6,$5,$4,$3,($2-1),($1-1900));
      if(time() > ($age + ($days * 24 * 60 * 60 ))) {
        #printf("removing: %s created at %s\n",$snap,strftime('%F %T',localtime($age)));
        my @com=qw( btrfs subvolume delete );
        push(@com,join('/',$BTRFSROOT,$subvol));
        print join(" ",@com)."\n";
        system(@com);
        if($? != 0) {
          warn "unable to delete subvolume";
        }
      }
    }
  }
  if($SNAP) {
    my @com=qw( btrfs subvolume snapshot -r );
    push(@com,join('/',$BTRFSROOT,$btrfs));
    push(@com,join('/',$BTRFSROOT,'snapshots',$btrfs,$time));
    print join(' ',@com)."\n";
    system(@com);
    if($? != 0) {
      warn "unable to create snapshot";
    }
  }
}

