#! /usr/bin/perl

use strict;
use warnings;
use Data::Dumper;
use POSIX qw(strftime);

my $LOGFILE='/var/log/rdbduprunner.log';
my @LOGFILES=map { glob } (
              strftime("${LOGFILE}[.-]%Y%m%d*",localtime(time()-(3*24*60*60))),# three days
              strftime("${LOGFILE}[.-]%Y%m%d*",localtime(time()-(2*24*60*60))),# two days
              strftime("${LOGFILE}[.-]%Y%m%d*",localtime(time()-(24*60*60))),  # yesterday
              strftime("${LOGFILE}[.-]%Y%m%d*",localtime(time())),             # today
             );

my @a;
foreach my $log (@LOGFILES) {
  if($log =~ /\.gz/) {
    open(L,'gzip -d -c '.$log.'|') or warn "file ${log} exists but cannot be opened" and next;
  }
  else {
    open(L,'<'.$log) or warn "file ${log} exists but cannot be opened" and next;
  }
  push(@a,(<L>)); # slurp
  close(L);
}

my %status;
LOG: foreach(@a) {
  # read oldest log first
  chomp;
  unless(/msg=\"exit status\"/) {
    next;
  }
  my $h={whole => $_};
  while($_ =~ s/^\s*(.+?)=\"(.*?)\"//) {
    if($1 eq 'tag') {
      next LOG;
    }
    $$h{$1}=$2;
  }
  $status{$$h{'rdbduprunner_tag'}}=$h;
}

foreach my $tag (sort(keys(%status))) {
  my $code=0;
  my $msg='backup good';
  if($status{$tag}{exit} eq '24') { # "Partial transfer due to vanished source files"
    $msg='backup good although some source files vanished';
  }
  elsif($status{$tag}{exit} ne '0') { # string 0
    $code=1;
    $msg='backup exited with a non-zero status';
  }
  elsif($status{$tag}{timestamp}+(72*60*60) < time()) {
    $code=1;
    $msg='backup is older than 72 hours';
  }
  elsif($status{$tag}{timestamp}+(36*60*60) < time()) {
    $code=1;
    $msg='backup is older than 36 hours';
  }
  printf("%d rsync_%s_backup - %s: %s\n",
         $code,
         $tag,
         $msg,
         $status{$tag}{whole},
        );

}
