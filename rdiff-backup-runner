#! /usr/bin/perl

#export PATH=$PATH:/usr/sbin:/sbin

# common options
# --exclude-globbing-filelist /etc/rdiff-backup/exclude-generic

use strict;
use warnings;
use Getopt::Long;

our $TEST=1;
our $STATS=1;
our $VERBOSITY=5;
our $TVERBOSITY=3;
our $LOCALHOST;
our $COMPARE=0;
our $RDIFF_BACKUP='rdiff-backup'; # assume it's in the path
our $BACKUP_ROOT='/mnt/auto/backup/rdiff-backup';
our $EXCLUDE_PATH='/etc/rdiff-backup';
our $PATH;

GetOptions('test!'          => \$TEST,
           'stats!'         => \$STATS,
           'verb=i'         => \$VERBOSITY,
           'tverb=i'        => \$TVERBOSITY,
           'localhost=s'    => \$LOCALHOST,
           'rdiff-backup=s' => \$RDIFF_BACKUP,
           'backup-root=s'  => \$BACKUP_ROOT,
           'compare'        => \$COMPARE,
           'path=s'         => \$PATH,
          );

if(not defined $LOCALHOST) {
  $LOCALHOST=`hostname`;
  chomp $LOCALHOST;
  my @a=split(/\./,$LOCALHOST);
  @a > 1 and $LOCALHOST=$a[0];
}

our @BACKUPS=({ 'path' => '/' },
              { 'path' => '/var' },
              { 'path' => '/usr' },
              { 'path' => '/home' },
              { 'path' => '/var/lib/mysql-snap',
                'prerun' => '/usr/local/sbin/rsnap-lvm',
                'postrun' => '/usr/local/sbin/rsnap-lvm --remove',
                'dest' => 'cain-mysql',
              },
              { 'path' => '/diskless' },
              { 'path' => '/var/log' },
              { 'path' => '/',
                'host' => 'xbox1', },
              { 'path' => '/diskless/delight',
                'dest' => 'delight-root',
              },
              { 'path' => '/diskless/xbox1/home',
                'dest' => 'xbox1-home',
              },
              { 'root' => '/home/spin/rdiff-backup',
                'host' => 'benway',
                'path' => '/home',
              },
              { 'root' => '/home/spin/rdiff-backup',
                'host' => 'male',
                'path' => '/home/acox',
              },
            );


foreach my $bh (@BACKUPS) {
  my $host=(defined $$bh{host} ? $$bh{host} : $LOCALHOST);
  my $path=(defined $$bh{path} ? $$bh{path} : '/');
  my $dest;
  my $tag;
  if(defined $$bh{dest}) {
    $dest=$$bh{dest};
    $tag=$dest;
  } else {
    $dest=$path;
    $dest =~ s/\//\-/g;
    $dest eq '-' and $dest='-root';
    $tag=$host.$dest;
  }
 
  $dest=(defined $$bh{root} ? $$bh{root} : $BACKUP_ROOT).'/'.$tag;
  if(defined $PATH and $path !~ /$PATH/) {
    next;
  }
  print "$host $path $tag $dest\n";

  my @com=($RDIFF_BACKUP,
           '--verbosity',$VERBOSITY,
           '--terminal-verbosity',$TVERBOSITY,
           '--exclude-special-files',
           '--exclude-other-filesystems',
           );
  $STATS and push(@com,'--print-statistics');

  if($path =~ /(home|home\/acox)$/) {
    push(@com,'--exclude-globbing-filelist',
         $EXCLUDE_PATH.'/exclude-generic-home');
  }
  push(@com,'--exclude-globbing-filelist',
       $EXCLUDE_PATH.'/exclude-'.$tag);

  if($COMPARE) {
    push(@com,'--compare');
  }

  push(@com,($host eq $LOCALHOST ? $path : $host.'::'.$path),$dest);
  print join(" ",@com)."\n";

  unless($TEST) {
    if($host ne $LOCALHOST) {
      system("fping $host");
      unless($? == 0) {
        warn "fping failed to ping $host";
        next;
      }
    }
    if(defined $$bh{prerun}) {
      print $$bh{prerun}."\n";
      system($$bh{prerun});
      unless($? == 0) {
        warn "unable to execute prerun command: skipping backup!";
        next;
      }
    }
    system(@com);
    unless($? == 0) {
      warn "unable to execute rdiff-backup!";
    }
    if(defined $$bh{postrun}) {
      print $$bh{postrun}."\n";
      system($$bh{postrun});
      unless($? == 0) {
        warn "unable to execute postrun command";
      }
    }
  }
}
